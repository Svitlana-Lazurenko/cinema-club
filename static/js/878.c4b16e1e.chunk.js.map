{"version":3,"file":"static/js/878.c4b16e1e.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieMainInfo/MovieMainInfo.styled.jsx","components/MovieMainInfo/MovieMainInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  margin-bottom: 20px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orange;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  margin-left: 8px;\n`;\n\nexport const Info = styled.div`\n  margin-left: 25px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const DescriptionTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const GenresTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.ul``;\n\nexport const GenreItem = styled.li`\n  display: inline;\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  Container,\n  Title,\n  Poster,\n  Info,\n  UserScore,\n  DescriptionTitle,\n  Description,\n  GenresTitle,\n  GenresList,\n  GenreItem,\n} from './MovieMainInfo.styled';\n\nexport const MovieMainInfo = ({ movie }) => {\n  return (\n    <Container>\n      <Poster\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n            : 'https://fakeimg.pl/300x450?text=300x450'\n        }\n        alt={`poster of movie ${movie.title}`}\n      />\n      <Info>\n        <Title>\n          {movie.title} ({movie.release_date.slice(0, 4)})\n        </Title>\n        <UserScore>\n          User score: {Math.round(movie.vote_average * 10)}%\n        </UserScore>\n        <DescriptionTitle>Overview</DescriptionTitle>\n        <Description>{movie.overview}</Description>\n        <GenresTitle>Genres</GenresTitle>\n        <GenresList>\n          {movie.genres.map(genre => (\n            <GenreItem key={genre.id}>{genre.name}</GenreItem>\n          ))}\n        </GenresList>\n      </Info>\n    </Container>\n  );\n};\n\nMovieMainInfo.propTypes = {\n  movie: PropTypes.PropTypes.object.isRequired,\n};\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { MovieMainInfo } from '../../components/MovieMainInfo/MovieMainInfo';\nimport api from '../../services/movies-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst itemStyles = {\n  margin: 8,\n  padding: '12px 16px',\n  border: '1px solid orange',\n  borderRadius: 4,\n  backgroundColor: 'rgba(255, 165, 0, 0.2)',\n  color: 'white',\n};\n\nconst linkStyles = {\n  display: 'block',\n  width: '100%',\n  height: '100%',\n};\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [status, setStatus] = useState(Status.IDLE);\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    api\n      .fetchMovieDetails(id)\n      .then(movieObj => {\n        if (!movieObj) {\n          return Promise.reject(new Error(`Information about movie not found`));\n        }\n\n        setMovie({ ...movieObj });\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [id]);\n\n  if (status === 'idle') {\n    return null;\n  }\n\n  if (status === 'pending') {\n    return (\n      <main>\n        <div>Loading...</div>\n      </main>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <main>\n        <div>{error.message}</div>\n      </main>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <main>\n        <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n        <MovieMainInfo movie={movie} />\n        <ul>\n          <li style={itemStyles}>\n            <Link style={linkStyles} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li style={itemStyles}>\n            <Link style={linkStyles} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    );\n  }\n};\n\nexport default MovieDetails;\n","const API_KEY = 'df4f25ddce476816dc7867d9ac4bd1ea';\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMoviesBySearch(title) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${title}&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieDetails(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieCast(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieReviews(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesBySearch,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Container","Poster","Info","Title","UserScore","DescriptionTitle","Description","GenresTitle","GenresList","GenreItem","MovieMainInfo","movie","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Status","itemStyles","margin","padding","border","borderRadius","backgroundColor","color","linkStyles","display","width","height","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","status","setStatus","setMovie","error","setError","useEffect","api","then","movieObj","Promise","reject","Error","catch","message","current","style","Suspense","fallback","API_KEY","fetchTrendingMovies","fetch","response","json","fetchMoviesBySearch","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}