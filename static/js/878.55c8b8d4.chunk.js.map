{"version":3,"file":"static/js/878.55c8b8d4.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieMainInfo/MovieMainInfo.styled.jsx","components/MovieMainInfo/MovieMainInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const Poster = styled.img``;\n\nexport const Title = styled.h1``;\n\nexport const UserScore = styled.p``;\n\nexport const DescriptionTitle = styled.h2``;\n\nexport const Description = styled.p``;\n\nexport const GenresTitle = styled.h2``;\n\nexport const GenresList = styled.ul``;\n\nexport const GenreItem = styled.li``;\n","import PropTypes from 'prop-types';\n\nimport {\n  Container,\n  Title,\n  Poster,\n  UserScore,\n  DescriptionTitle,\n  Description,\n  GenresTitle,\n  GenresList,\n  GenreItem,\n} from './MovieMainInfo.styled';\n\nexport const MovieMainInfo = ({ movie }) => {\n  return (\n    <Container>\n      <Poster\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n            : 'https://fakeimg.pl/300x450?text=300x450'\n        }\n        alt={`poster of movie ${movie.title}`}\n      />\n      <Title>\n        {movie.title} ({movie.release_date.slice(0, 4)})\n      </Title>\n      <UserScore>User score: {Math.round(movie.vote_average * 10)}%</UserScore>\n      <DescriptionTitle>Overview</DescriptionTitle>\n      <Description>{movie.overview}</Description>\n      <GenresTitle>Genres</GenresTitle>\n      <GenresList>\n        {movie.genres.map(genre => (\n          <GenreItem key={genre.id}>{genre.name}</GenreItem>\n        ))}\n      </GenresList>\n    </Container>\n  );\n};\n\nMovieMainInfo.propTypes = {\n  movie: PropTypes.PropTypes.object.isRequired,\n};\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { MovieMainInfo } from '../../components/MovieMainInfo/MovieMainInfo';\nimport api from '../../services/movies-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [status, setStatus] = useState(Status.IDLE);\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    api\n      .fetchMovieDetails(id)\n      .then(movieObj => {\n        if (!movieObj) {\n          return Promise.reject(new Error(`Information about movie not found`));\n        }\n\n        setMovie({ ...movieObj });\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [id]);\n\n  if (status === 'idle') {\n    return null;\n  }\n\n  if (status === 'pending') {\n    return (\n      <main>\n        <div>Loading...</div>\n      </main>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <main>\n        <div>{error.message}</div>\n      </main>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <main>\n        <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n        <MovieMainInfo movie={movie} />\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    );\n  }\n};\n\nexport default MovieDetails;\n","const API_KEY = 'df4f25ddce476816dc7867d9ac4bd1ea';\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMoviesBySearch(title) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${title}&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieDetails(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieCast(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieReviews(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesBySearch,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Container","Poster","Title","UserScore","DescriptionTitle","Description","GenresTitle","GenresList","GenreItem","MovieMainInfo","movie","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Status","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","status","setStatus","setMovie","error","setError","useEffect","api","then","movieObj","Promise","reject","Error","catch","message","current","Suspense","fallback","API_KEY","fetchTrendingMovies","fetch","response","json","fetchMoviesBySearch","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}