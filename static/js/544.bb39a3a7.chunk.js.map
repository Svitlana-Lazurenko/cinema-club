{"version":3,"file":"static/js/544.bb39a3a7.chunk.js","mappings":"qNAGaA,EAAYC,EAAAA,EAAAA,IAAH,4EAMTC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qIASVG,EAAcH,EAAAA,EAAAA,IAAH,yUAWd,SAAAI,GAAK,OAAIA,EAAMC,UAAV,IAKFC,EAAaN,EAAAA,EAAAA,EAAH,4G,SC1BVO,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACX,EAAD,UACGS,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACX,EAAD,CACEY,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMP,GAFjB,UAKE,SAACN,EAAD,CACEE,WACEO,EAAMK,cAAN,yCACsCL,EAAMK,eACxC,KAJR,UAOE,SAACX,EAAD,UAAaM,EAAMM,WAThBN,EAAME,GAJE,KAmBtB,C,uFC5BKK,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAwDZ,UArDa,WACX,OAA4BC,EAAAA,EAAAA,UAASD,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRL,EAAUH,GAEVS,EAAAA,EAAAA,sBAEGC,MAAK,SAAAC,GACJ,GAAiC,IAA7BA,EAAUC,QAAQC,OACpB,OAAOC,QAAQC,OAAO,IAAIC,MAAJ,qBAGxBX,GAAa,OAAIM,EAAUC,UAC3BT,EAAUH,EACX,IACAiB,OAAM,SAAAX,GACLC,EAASD,GACTH,EAAUH,EACX,GACJ,GAAE,IAEY,SAAXE,EACK,KAGM,YAAXA,GAEA,6BACE,wCADF,OAMW,aAAXA,GAEA,2BACE,yBAAMI,EAAMY,YAKH,aAAXhB,GAEA,2BACE,SAAC,IAAD,CAAYb,OAAQe,WAH1B,CAOD,C,oBC9DD,IAAMe,EAAU,mCA0ChB,IAAMV,EAAM,CACVW,oBAzCF,WACE,OAAOC,MAAM,qGAAD,OAC2FF,IACrGT,MAAK,SAAAY,GACL,OAAOA,EAASC,MACjB,GACF,EAoCCC,oBAlCF,SAA6BzB,GAC3B,OAAOsB,MAAM,6FAAD,OACmFtB,EADnF,oBACoGoB,IAC9GT,MAAK,SAAAY,GACL,OAAOA,EAASC,MACjB,GACF,EA6BCE,kBA3BF,SAA2BC,GACzB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,mCAC+DP,IACzET,MAAK,SAAAY,GACL,OAAOA,EAASC,MACjB,GACF,EAsBCI,eApBF,SAAwBD,GACtB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,2CACuEP,IACjFT,MAAK,SAAAY,GACL,OAAOA,EAASC,MACjB,GACF,EAeCK,kBAbF,SAA2BF,GACzB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,kDAC8EP,IACxFT,MAAK,SAAAY,GACL,OAAOA,EAASC,MACjB,GACF,GAUD,K","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const StyledLink = styled(Link)`\n  flex-basis: calc((100% - 45px) / 4);\n  text-transform: uppercase;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid orange;\n  border-radius: 7px;\n  width: 100%;\n  height: 145px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-image: linear-gradient(to right, #2f303a66, #2f303a66),\n    url(${props => props.background});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-weight: 600;\n  font-size: 20px;\n\n  padding: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Container,\n  StyledLink,\n  CardWrapper,\n  MovieTitle,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <StyledLink\n          to={`${movie.id}`}\n          state={{ from: location }}\n          key={movie.id}\n        >\n          <CardWrapper\n            background={\n              movie.backdrop_path\n                ? `https://image.tmdb.org/t/p/w300${movie.backdrop_path}`\n                : null\n            }\n          >\n            <MovieTitle>{movie.title}</MovieTitle>\n          </CardWrapper>\n        </StyledLink>\n      ))}\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport api from '../../services/movies-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [moviesArr, setMoviesArr] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    api\n      .fetchTrendingMovies()\n      .then(moviesObj => {\n        if (moviesObj.results.length === 0) {\n          return Promise.reject(new Error(`Movies not found`));\n        }\n\n        setMoviesArr([...moviesObj.results]);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, []);\n\n  if (status === 'idle') {\n    return null;\n  }\n\n  if (status === 'pending') {\n    return (\n      <main>\n        <div>Loading...</div>;\n      </main>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <main>\n        <div>{error.message}</div>\n      </main>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <main>\n        <MoviesList movies={moviesArr} />\n      </main>\n    );\n  }\n};\n\nexport default Home;\n","const API_KEY = 'df4f25ddce476816dc7867d9ac4bd1ea';\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMoviesBySearch(title) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${title}&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieDetails(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieCast(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieReviews(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesBySearch,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["Container","styled","StyledLink","Link","CardWrapper","props","background","MovieTitle","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","backdrop_path","title","Status","useState","status","setStatus","moviesArr","setMoviesArr","error","setError","useEffect","api","then","moviesObj","results","length","Promise","reject","Error","catch","message","API_KEY","fetchTrendingMovies","fetch","response","json","fetchMoviesBySearch","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}