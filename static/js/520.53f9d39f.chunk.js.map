{"version":3,"file":"static/js/520.53f9d39f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, MovieTitle } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            <MovieTitle>{movie.title}</MovieTitle>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button``;\n","import { Input, Button, Form, Label } from './SearchForm.styled';\n\nexport const SearchForm = ({ value, onSubmit, onChange }) => {\n  return (\n    <Form onSubmit={e => onSubmit(e)}>\n      <Label>\n        Enter title of movie\n        <Input\n          placeholder=\"Avatar\"\n          name=\"title\"\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n      </Label>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport api from '../../services/movies-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState(Status.IDLE);\n  const [moviesArr, setMoviesArr] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (!searchParams.size) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n    const movieTitle = searchParams.get('title') ?? '';\n\n    api\n      .fetchMoviesBySearch(movieTitle)\n      .then(moviesObj => {\n        if (moviesObj.results.length === 0) {\n          return Promise.reject(new Error(`Movies not found`));\n        }\n\n        setMoviesArr([...moviesObj.results]);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [searchParams]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const title = e.target.title.value;\n    const nextParams = title !== '' ? { title } : {};\n    setSearchParams(nextParams);\n    setQuery('');\n  };\n\n  const onChange = queryInput => {\n    setQuery(queryInput);\n  };\n\n  if (status === 'idle') {\n    return (\n      <main>\n        <SearchForm value={query} onSubmit={onSubmit} onChange={onChange} />\n      </main>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <main>\n        <SearchForm value={query} onSubmit={onSubmit} onChange={onChange} />\n        <div>Loading...</div>\n      </main>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <main>\n        <SearchForm value={query} onSubmit={onSubmit} onChange={onChange} />\n        <div>{error.message}</div>\n      </main>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <main>\n        <SearchForm value={query} onSubmit={onSubmit} onChange={onChange} />\n        <MoviesList movies={moviesArr} />\n      </main>\n    );\n  }\n};\n\nexport default Movies;\n","const API_KEY = 'df4f25ddce476816dc7867d9ac4bd1ea';\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMoviesBySearch(title) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${title}&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieDetails(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieCast(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieReviews(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesBySearch,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["Container","styled","CardWrapper","MovieTitle","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Form","Label","Input","Button","SearchForm","value","onSubmit","onChange","e","placeholder","name","type","target","Status","useState","query","setQuery","status","setStatus","moviesArr","setMoviesArr","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","size","movieTitle","get","api","then","moviesObj","results","length","Promise","reject","Error","catch","preventDefault","queryInput","message","API_KEY","fetchTrendingMovies","fetch","response","json","fetchMoviesBySearch","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}