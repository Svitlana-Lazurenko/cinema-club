{"version":3,"file":"static/js/387.30b4a215.chunk.js","mappings":"gQAEaA,EAAYC,EAAAA,EAAAA,IAAH,6CAITC,EAAcD,EAAAA,EAAAA,GAAH,sBAEXE,EAAaF,EAAAA,EAAAA,GAAH,8EAMVG,EAASH,EAAAA,EAAAA,GAAH,+EAKNI,EAAUJ,EAAAA,EAAAA,EAAH,4C,SCRdK,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAwDZ,EArDgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASH,GAArC,eAAOM,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRH,EAAUP,GAEVW,EAAAA,EAAAA,kBACqBV,GAClBW,MAAK,SAAAC,GACJ,GAAkC,IAA9BA,EAAWC,QAAQC,OACrB,OAAOC,QAAQC,OAAO,IAAIC,MAAJ,sBAGxBb,GAAW,OAAIQ,EAAWC,UAC1BP,EAAUP,EACX,IACAmB,OAAM,SAAAX,GACLC,EAASD,GACTD,EAAUP,EACX,GACJ,GAAE,CAACC,IAEW,SAAXK,EACK,KAGM,YAAXA,GACK,wCAGM,aAAXA,GACK,yBAAME,EAAMY,UAGN,aAAXd,GAEA,SAACZ,EAAD,WACE,SAACE,EAAD,UACGQ,EAAQiB,KAAI,SAAAC,GAAM,OACjB,UAACzB,EAAD,YACE,SAACC,EAAD,UAASwB,EAAOC,UAChB,SAACxB,EAAD,UAAUuB,EAAOE,YAFFF,EAAOrB,GADP,aAJ3B,CAcD,C,oBCrED,IAAMwB,EAAU,mCA0ChB,IAAMd,EAAM,CACVe,oBAzCF,WACE,OAAOC,MAAM,qGAAD,OAC2FF,IACrGb,MAAK,SAAAgB,GACL,OAAOA,EAASC,MACjB,GACF,EAoCCC,oBAlCF,SAA6BC,GAC3B,OAAOJ,MAAM,6FAAD,OACmFI,EADnF,oBACoGN,IAC9Gb,MAAK,SAAAgB,GACL,OAAOA,EAASC,MACjB,GACF,EA6BCG,kBA3BF,SAA2BC,GACzB,OAAON,MAAM,sCAAD,OAC4BM,EAD5B,mCAC+DR,IACzEb,MAAK,SAAAgB,GACL,OAAOA,EAASC,MACjB,GACF,EAsBCK,eApBF,SAAwBD,GACtB,OAAON,MAAM,sCAAD,OAC4BM,EAD5B,2CACuER,IACjFb,MAAK,SAAAgB,GACL,OAAOA,EAASC,MACjB,GACF,EAeCM,kBAbF,SAA2BF,GACzB,OAAON,MAAM,sCAAD,OAC4BM,EAD5B,kDAC8ER,IACxFb,MAAK,SAAAgB,GACL,OAAOA,EAASC,MACjB,GACF,GAUD,K","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-top: 30px;\n`;\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Author = styled.h2`\n  text-decoration: underline;\n  margin-bottom: 15px;\n`;\n\nexport const Content = styled.p`\n  text-indent: 1%;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/movies-api';\nimport {\n  Container,\n  ReviewsList,\n  ReviewItem,\n  Author,\n  Content,\n} from './Reviews.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    api\n      .fetchMovieReviews(id)\n      .then(reviewsObj => {\n        if (reviewsObj.results.length === 0) {\n          return Promise.reject(new Error(`Reviews not found`));\n        }\n\n        setReviews([...reviewsObj.results]);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [id]);\n\n  if (status === 'idle') {\n    return null;\n  }\n\n  if (status === 'pending') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'rejected') {\n    return <div>{error.message}</div>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <Container>\n        <ReviewsList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <Author>{review.author}</Author>\n              <Content>{review.content}</Content>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      </Container>\n    );\n  }\n};\n\nexport default Reviews;\n","const API_KEY = 'df4f25ddce476816dc7867d9ac4bd1ea';\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMoviesBySearch(title) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${title}&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieDetails(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieCast(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction fetchMovieReviews(movie_id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesBySearch,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["Container","styled","ReviewsList","ReviewItem","Author","Content","Status","id","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","api","then","reviewsObj","results","length","Promise","reject","Error","catch","message","map","review","author","content","API_KEY","fetchTrendingMovies","fetch","response","json","fetchMoviesBySearch","title","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}